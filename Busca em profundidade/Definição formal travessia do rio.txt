11 - Travessia da Família
Imagine que numa das margens de um rio há uma mãe e duas filhas, um pai e
dois filhos, um policial e uma ladra. O problema consiste em atravessar todos os
indivíduos para a outra margem do rio, porém a jangada disponível para a
travessia só transporta dois indivíduos de cada vez e só os adultos (o pai, a mãe
e o policial) podem conduzir a jangada. Além disso, o pai não pode ficar na
presença das filhas sem a presença da mãe em qualquer das margens e a mãe
também não pode ficar na presença dos filhos sem a presença do pai. A ladra
deve sempre estar acompanhada do policial quando estiver na presença de
qualquer dos outros indivíduos.

Estrutura de dados: vetor[8]

   0       1        2      3      4        5         6         7        8   
[ Pai | Filho1 | Filho2 | Mãe | Filha1 | Filha2 | Policial | Ladrão | Barco ]

0 => Esquerda
1 => Direita

Estado inicial:     (0,0,0,0,0,0,0,0,0)
Estado objetivo:    (1,1,1,1,1,1,1,1,1)

Ações: 
    (0,0,0,0,0,0,0,0,0): [(1,0,0,1,0,0,0,0,1), (0,0,0,0,0,0,1,1,1)],

    (1,0,0,1,0,0,0,0,1): [(0,0,0,0,0,0,0,0,0)],

    (0,0,0,0,0,0,1,1,1): [(0,0,0,0,0,0,0,0,0), (0,0,0,0,0,0,0,1,0)],

    (0,0,0,0,0,0,0,1,0): [(0,0,0,0,0,0,1,1,1), (0,1,0,0,0,0,1,1,1), (0,0,1,0,0,0,1,1,1), (0,0,0,0,1,0,1,1,1), (0,0,0,0,0,1,1,1,1)],
    
    (0,1,0,0,0,0,1,1,1): [(0,0,0,0,0,0,0,1,0), (0,1,0,0,0,0,0,0,0)],

    (0,0,1,0,0,0,1,1,1): [(0,0,0,0,0,0,0,1,0), (0,0,1,0,0,0,0,0,0)],

    (0,0,0,0,1,0,1,1,1): [(0,0,0,0,0,0,0,1,0), (0,0,0,0,1,0,0,0,0)],

    (0,0,0,0,0,1,1,1,1): [(0,0,0,0,0,0,0,1,0), (0,0,0,0,0,1,0,0,0)],

    (0,1,0,0,0,0,0,0,0): [(1,1,1,0,0,0,0,0,1), (0,1,0,0,0,0,1,1,1), (1,1,0,1,0,0,0,0,1)],

    (0,0,1,0,0,0,0,0,0): [(1,1,1,0,0,0,0,0,1), (0,0,1,0,0,0,1,1,1), (1,0,0,1,1,0,0,0,1)],

    (0,0,0,0,0,1,0,0,0): [(0,0,0,1,1,1,0,0,1), (0,0,0,0,0,1,1,1,1), (1,0,0,1,0,1,0,0,1)],

    (1,1,1,0,0,0,0,0,1): [(0,0,1,0,0,0,0,0,0), (0,1,0,0,0,0,0,0,0), (0,1,1,0,0,0,0,0,0)],

    (1,1,0,1,0,0,0,0,1): [(0,1,0,0,0,0,0,0,0)],

    (1,0,1,1,0,0,0,0,1): [(0,0,1,0,0,0,0,0,0)],

    (0,0,0,1,1,1,0,0,1): [(0,0,0,0,1,1,0,0,0), (0,0,0,0,0,1,0,0,0), (0,0,0,0,1,0,0,0,0)],

    (1,0,0,1,1,0,0,0,1): [(0,0,0,0,1,0,0,0,0)],

    (1,0,0,1,0,1,0,0,1): [(0,0,0,0,0,1,0,0,0)],

    (0,1,1,0,0,0,0,0,0): [(1,1,1,0,0,0,0,0,1), (1,1,1,1,0,0,0,0,1), (0,1,1,0,0,0,1,1,1)],

    (0,0,0,0,1,1,0,0,0): [(0,0,0,1,1,1,0,0,1), (1,0,0,1,1,1,0,0,1), (0,0,0,0,1,1,1,1,1)],

    (1,1,1,1,0,0,0,0,1): [(1,1,1,0,0,0,0,0,0), (0,1,1,0,0,0,0,0,0)],

    (0,1,1,0,0,0,1,1,1): [(0,1,1,0,0,0,0,0,0)],

    (1,0,0,1,1,1,0,0,1): [(0,0,0,1,1,1,0,0,0), (0,0,0,0,1,1,0,0,0)],

    (0,0,0,0,1,1,1,1,1): [(0,0,0,0,1,1,0,0,0)],

    (1,1,1,0,0,0,0,0,0): [(1,1,1,1,1,0,0,0,1), (1,1,1,1,0,1,0,0,1), (1,1,1,1,0,0,0,0,1), (1,1,1,0,0,0,1,1,1)],

    (0,0,0,1,1,1,0,0,0): [(1,1,0,1,1,1,0,0,1), (1,0,1,1,1,1,0,0,1), (1,0,0,1,1,1,0,0,1), (0,0,0,1,1,1,1,1,1)],

    (1,1,1,1,1,0,0,0,1): [(0,1,1,0,1,0,0,0,0), (1,1,1,0,0,0,0,0,0)],

    (1,1,1,1,0,1,0,0,1): [(0,1,1,0,0,1,0,0,0), (1,1,1,0,0,0,0,0,0)],

    (1,1,1,0,0,0,1,1,1): [(0,1,1,0,0,0,1,1,0), (0,0,1,0,0,0,1,1,0), (0,1,0,0,0,0,1,1,0), (1,1,1,0,0,0,0,0,0)],

    (1,1,0,1,1,1,0,0,1): [(0,0,0,1,1,1,0,0,0), (0,1,0,0,1,1,0,0,0)],

    (1,0,1,1,1,1,0,0,1): [(0,0,0,1,1,1,0,0,0), (0,0,1,0,1,1,0,0,0)],

    (0,0,0,1,1,1,1,1,1): [(0,0,0,0,1,1,1,1,0), (0,0,0,0,0,1,1,1,0), (0,0,0,0,1,0,1,1,0), (0,0,0,1,1,1,0,0,0)],

    (0,1,1,0,1,0,0,0,0): [(1,1,1,1,1,0,0,0,1), (0,1,1,0,1,0,1,1,1)],

    (0,1,1,0,0,1,0,0,0): [(1,1,1,1,0,1,0,0,1), (0,1,1,0,0,1,1,1,1)],

    (0,1,1,0,0,0,1,1,0): [(1,1,1,0,0,0,1,1,1), (1,1,1,1,0,0,1,1,1)],

    (0,0,1,0,0,0,1,1,0): [(1,1,1,0,0,0,1,1,1), (1,0,1,1,0,0,1,1,1)],

    (0,1,0,0,0,0,1,1,0): [(1,1,1,0,0,0,1,1,1), (1,1,0,1,0,0,1,1,1)],

    (0,1,0,0,1,1,0,0,0): [(1,1,0,1,1,1,0,0,1), (0,1,0,0,1,1,1,1,1)],

    (0,0,1,0,1,1,0,0,0): [(1,0,1,1,1,1,0,0,1), (0,0,1,0,1,1,1,1,1)],

    (0,0,0,0,1,1,1,1,0): [(1,0,0,1,1,1,1,1,1), (0,0,0,1,1,1,1,1,1)],

    (0,0,0,0,0,1,1,1,0): [(1,0,0,1,0,1,1,1,1), (0,0,0,1,1,1,1,1,1)],

    (0,0,0,0,1,0,1,1,0): [(1,0,0,1,1,0,1,1,1), (0,0,0,1,1,1,1,1,1)],

    (0,1,1,0,1,0,1,1,1): [(0,1,1,0,1,0,0,0,0)],

    (0,1,1,0,0,1,1,1,1): [(0,1,1,0,0,1,0,0,0)],

    (1,1,1,1,0,0,1,1,1): [(0,1,1,0,0,0,1,1,0), (1,1,1,0,0,0,1,1,0), (1,1,1,1,0,0,0,0,0)],

    (1,0,1,1,0,0,1,1,1): [(0,0,1,0,0,0,1,1,0), (1,0,1,1,0,0,0,0,0)],

    (1,1,0,1,0,0,1,1,1): [(0,1,0,0,0,0,1,1,0), (1,1,0,1,0,0,0,0,0)],

    (0,1,0,0,1,1,1,1,1): [(0,1,0,0,1,1,0,0,0)],

    (0,0,1,0,1,1,1,1,1): [(0,0,1,0,1,1,0,0,0)],

    (1,0,0,1,1,1,1,1,1): [(0,0,0,1,1,1,1,1,0), (1,0,0,1,1,1,0,0,0), (0,0,0,0,1,1,1,1,1)],

    (1,0,0,1,0,1,1,1,1): [(0,0,0,0,0,1,1,1,0), (1,0,0,1,0,1,0,0,0)],

    (1,0,0,1,1,0,1,1,1): [(0,0,0,0,1,0,1,1,0), (1,0,0,1,1,0,0,0,0)],

    (1,1,1,0,0,0,1,1,0): [(1,1,1,1,0,0,1,1,1), (1,1,1,1,1,0,1,1,1), (1,1,1,1,0,1,1,1,1),],

    (1,1,1,1,0,0,0,0,0): [(1,1,1,1,0,0,1,1,1)],

    (1,0,1,1,0,0,0,0,0): [(1,0,1,1,0,0,1,1,1)],

    (1,1,0,1,0,0,0,0,0): [(1,1,0,1,0,0,1,1,1)],

    (0,0,0,1,1,1,1,1,0): [(1,0,0,1,1,1,1,1,1), (1,1,0,1,1,1,1,1,1), (1,0,1,1,1,1,1,1,1)],

    (1,0,0,1,1,1,0,0,0): [(1,0,0,1,1,1,1,1,1)],

    (1,0,0,1,0,1,0,0,0): [(1,0,0,1,0,1,1,1,1)],

    (1,0,0,1,1,0,0,0,0): [(1,0,0,1,1,0,1,1,1)],

    (1,1,1,1,1,0,1,1,1): [(1,1,1,0,0,0,1,1,0), (1,1,1,1,1,0,0,0,0)],

    (1,1,1,1,0,1,1,1,1): [(1,1,1,0,0,0,1,1,0), (1,1,1,1,0,1,0,0,0)],

    (1,1,0,1,1,1,1,1,1): [(0,0,0,1,1,1,1,1,0), (1,1,0,1,1,1,0,0,0)],

    (1,0,1,1,1,1,1,1,1): [(0,0,0,1,1,1,1,1,0), (1,0,1,1,1,1,0,0,0)],

    (1,1,1,1,1,0,0,0,0): [(1,1,1,1,1,1,1,0,1), (1,1,1,1,1,0,1,1,1)],

    (1,1,1,1,0,1,0,0,0): [(1,1,1,1,1,1,1,0,1), (1,1,1,1,0,1,1,1,1)],

    (1,1,0,1,1,1,0,0,0): [(1,1,1,1,1,1,1,0,1), (1,1,0,1,1,1,1,1,1)],

    (1,0,1,1,1,1,0,0,0): [(1,1,1,1,1,1,1,0,1), (1,0,1,1,1,1,1,1,1)],

    (1,1,1,1,1,1,1,0,1): [(1,1,1,1,1,1,0,0,0), (1,0,1,1,1,1,0,0,0), (1,1,0,1,1,1,0,0,0), (1,1,1,1,0,1,0,0,0), (1,1,1,1,1,0,0,0,0)],

    (1,1,1,1,1,1,0,0,0): [(1,1,1,1,1,1,1,0,1), (1,1,1,1,1,1,1,1,1)]